@model PubliAX.Web.Models.Profile.CreateBlockViewModel

@{
    ViewBag.Title = "createBlock";
    Layout = "~/Views/Shared/_LayoutGentelella.cshtml";
}

<h2>Criar novo bloqueio</h2>


@using (Html.BeginForm("createBlock", "Profile", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div id="createBlockForm" class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-3">Tipo Bloqueio:</label>
            <div class="col-md-9">
                <input class="myRadio" type="radio" value="F" name="typePerson" id="optF" checked />@Html.Label("Física")
                <input class="myRadio" type="radio" value="J" name="typePerson" id="optJ" />@Html.Label("Jurídica")
                <input class="myRadio" type="radio" value="E" name="typePerson" id="optE" />@Html.Label("Email")
                @Html.ValidationMessageFor(model => model.typePerson, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-3" data-bind="text: labelCgc() + ': '"></label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.cgc, new { htmlAttributes = new { @id = "edCgc", @class = "form-control cpf", placeholder = "CPF" } })
                @Html.ValidationMessageFor(model => model.cgc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="form-group" style="margin-top:30px">
            <div class="col-md-offset-3 col-md-6">
                <button type="submit" class="btn btn-primary form-control">Criar</button>
            </div>
        </div>
    </div>
}

<div class="text-center">
    @Html.ActionLink("[ Voltar ]", "blacklist")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        var ViewModel = function () {
            var self = this;

            self.labelCgc = ko.observable("CPF");

            self.eventRbTipo = function () {
                if ($("#optE").is(":checked")) {
                    self.labelCgc("Email");
                }
                else if ($("#optF").is(":checked")) {
                    self.labelCgc("CPF");
                }
                else {
                    self.labelCgc("CNPJ");
                }
            };
        };

        var VO = new ViewModel();
        ko.applyBindings(VO, document.getElementById("createBlockForm"));

        $(function () {
            $(".myRadio")
                .change(function () {
                    if ($(this).is(':checked')) {
                        if ($(this).val() == "F") {
                            $("#edCgc")
                                .removeClass("cnpj")
                                .addClass("cpf")
                                .attr("placeholder", "CPF")
                                .inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
                        }
                        else if ($(this).val() == "J") {
                            $("#edCgc")
                                .removeClass("cpf")
                                .addClass("cnpj")
                                .attr("placeholder", "CNPJ")
                                .inputmask("mask", { "mask": "99.999.999/9999-99" }, { reverse: true });
                        }
                        else if ($(this).val() == "E") {
                            $("#edCgc")
                                .removeClass("cpf")
                                .removeClass("cnpj")
                                .attr("placeholder", "Email")
                                .inputmask("email");
                        }

                        VO.eventRbTipo();
                    }
                });
        });
    </script>
}
