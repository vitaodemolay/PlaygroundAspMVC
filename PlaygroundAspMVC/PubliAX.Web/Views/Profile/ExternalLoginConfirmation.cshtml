@model PubliAX.Web.Models.Profile.ExternalLoginConfirmationViewModel

@{
    ViewBag.Title = "ExternalLoginConfirmation";
    Layout = "~/Views/Shared/_LayoutProfile.cshtml";
}


<div id="FormExternalConfirm" class="container">
    <div class="col-xs-12 col-lg-2"></div>
    <div class="col-xs-12 col-lg-8">
        <div class="jumbotron" style="margin-top:50px; border:0.5px solid #000000;">
            <div class="text-center" style="margin-bottom:30px;">
                <h2>Confirmação de Login Externo</h2>
            </div>

            @using (Html.BeginForm("ExternalLoginConfirmation", "Profile", FormMethod.Post, new { ReturnUrl = ViewBag.ReturnUrl }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div>
                        @Html.HiddenFor(model => model.provider)
                        @Html.HiddenFor(model => model.providerKey)
                        @Html.HiddenFor(model => model.name)
                        @Html.HiddenFor(model => model.email)
                    </div>

                    <div class="text-center row alert alert-info">
                        <div class="col-xs-12">
                            <strong>
                                Olá @Model.name, essa é a primeira vez que você autentica com @Model.provider. Apenas desse vez precisamos confirmar a sua conta.
                            </strong>
                        </div>
                        <div class="col-xs-12">
                            (Seu email de autenticação é @Model.email.)
                        </div>
                    </div>
                    <div class="form-group" style="margin-top:30px">
                        @Html.LabelFor(model => model.typePerson, "Tipo Pessoa:", htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            <input class="myRadio" type="radio" value="F" name="typePerson" id="optF" checked />@Html.Label("Física")
                            <input class="myRadio" type="radio" value="J" name="typePerson" id="optJ" />@Html.Label("Jurídica")
                            @Html.ValidationMessageFor(model => model.typePerson, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3" data-bind="text: labelCgc() + ': '"></label>
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.cgc, new { htmlAttributes = new { @id = "edCgc", @class = "form-control cpf", placeholder = "CPF" } })
                            @Html.ValidationMessageFor(model => model.cgc, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="clearfix"></div>

                <div class="form-group" style="margin-top:30px">
                    <div class="col-md-offset-3 col-md-6">
                        <button type="submit" class="btn btn-primary form-control">Confirmar</button>
                    </div>
                </div>
            }

        </div>


        <div class="text-center">
            @Html.ActionLink("[ Voltar ]", "signin")
        </div>
    </div>
    <div class="col-xs-12 col-lg-2"></div>
    <div class="col-xs-12 col-lg-1"></div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        var ViewModel = function () {
            var self = this;

            self.labelCgc = ko.observable("CPF");

            self.eventRbTipo = function () {
                if ($("#optF").is(":checked")) {
                    self.labelCgc("CPF");
                }
                else {
                    self.labelCgc("CNPJ");
                }
            };
        }

        var VO = new ViewModel();
        ko.applyBindings(VO, document.getElementById("FormExternalConfirm"));

        $(function () {
            $(".myRadio")
                .change(function () {
                    if ($(this).is(':checked')) {
                        if ($(this).val() == "F") {
                            $("#edCgc")
                                .removeClass("cnpj")
                                .addClass("cpf")
                                .attr("placeholder", "CPF")
                                .inputmask("mask", { "mask": "999.999.999-99" }, { reverse: true });
                        }
                        else if ($(this).val() == "J") {
                            $("#edCgc")
                                .removeClass("cpf")
                                .addClass("cnpj")
                                .attr("placeholder", "CNPJ")
                                .inputmask("mask", { "mask": "99.999.999/9999-99" }, { reverse: true });
                        }

                        VO.eventRbTipo();
                    }
                });
        });
    </script>
}
