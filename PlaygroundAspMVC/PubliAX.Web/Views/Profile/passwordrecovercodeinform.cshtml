@model PubliAX.Web.Models.Profile.RecoverCodeInformViewModel

@{
    ViewBag.Title = "passwordrecovercodeinform";
    Layout = "~/Views/Shared/_LayoutProfile.cshtml";
}

<div class="container" id="FormAccountRecover">
    <div class="col-xs-12 col-lg-3"></div>
    <div class="col-xs-12 col-lg-6">
        <div class="jumbotron" style="margin-top:150px; border:0.5px solid #000000;">
            <div class="text-center" style="margin-bottom:30px;">
                <h2>Recuperar Senha</h2>
            </div>

            @using (Html.BeginForm())
            {
                @Html.HiddenFor(f => f.userId);
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div data-bind="visible: showblA">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Code, "Código:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @placeholder = "código enviado por email" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="button" value="Validar" data-bind="click: changeShowblA" class="btn btn-primary btn-default" />
                            </div>
                        </div>
                    </div>

                    <div data-bind="visible: showblB">
                        <div class="form-group">
                            @Html.LabelFor(model => model.password, "Senha:", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @placeholder = "nova senha" } })
                                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.confirm, "Confirmação:", htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.confirm, new { htmlAttributes = new { @class = "form-control", @placeholder = "confirmação de senha" } })
                                @Html.ValidationMessageFor(model => model.confirm, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Recuperar" class="btn btn-primary btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            }

            <div class="text-center">
                @Html.ActionLink("[ Voltar ]", "signin")
            </div>

        </div>
    </div>
    <div class="col-xs-12 col-lg-3"></div>
</div>



@section Scripts {
    <script>
        var viewmodel = function () {
            var self = this;

            self.showblA = ko.observable(true);
            self.showblB = ko.computed(function () {
                return !self.showblA();
            }, self);

            self.changeShowblA = function () {
                self.showblA(!self.showblA());
            }
        }


        ko.applyBindings(new viewmodel(), document.getElementById("FormAccountRecover"));
    </script>
}



